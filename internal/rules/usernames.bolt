//
// usernames.bolt
//

// Map uid -> user, including capital letters.
path /uids {
  read() { amAdmin() }
  /{uid} is Username {
    read() { auth.uid == key() }
    create() { auth.uid == key() && userExists(this) && prior(root).usernames[this.toLowerCase()] == null }
  }
}

// lowercase(user)
path /usernames {
  read() { amAdmin() }
  /{user} is Boolean {
    read() { true }
    create() { this == true && key() == root.uids[auth.uid].toLowerCase() }
  }
}

type Username extends String {
  validate() {
    this.test(/^[a-zA-Z0-9_-]{3,16}$/)
  }
}


me() { root.uids[auth.uid] }
userExists(user) { root.usernames[user.toLowerCase()] != null }
isMe(user) { root.uids[auth.uid] == user }
